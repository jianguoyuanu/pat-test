              找出不是两个数组共有的元素
输入格式：
分别在两行中给出两个整形数组，每行先给出正整数N（≤20），随后是N个整数，其间以空格分隔。
输出格式：
在一行中按照数字给出的顺序输出不是两数组共有的元素，数字间以空格分隔，但行末不得有多余的空格。
题目保证至少存在一个这样的数字。同一数字不重复输出。
输入样例：
10 3 -5 2 8 0 3 5 -15 9 100
11 6 4 8 2 6 -5 9 0 100 8 1
输出样例：
3 5 -15 6 4 1
代码：
#include<stdio.h>
int main(){
	int a[20];
	int b[20];
	int c[50];
	int d[50]={0};
	int i,j,m,n,flag=0;
	int cnt = 0;
	scanf("%d",&n);
	for(i=0;i<n;i++){
		scanf("%d",&a[i]);
	}
	
	scanf("%d",&m);
	for(j=0;j<m;j++){
		scanf("%d",&b[j]);
	}
	
	for(i=0;i<n;i++){
		for(j=0;j<m;j++){
			if(a[i]==b[j]){
				flag=1;
			}
		}
		if(flag==0){
			c[cnt] = a[i];
		
			cnt++;
		}
		flag = 0;
	}
	for(j=0;j<m;j++){
		for(i=0;i<n;i++){
			if(a[i]==b[j]){
				flag=1;
			}
		}
		if(flag==0){
			c[cnt] = b[j];
			cnt++;
			}
		flag = 0;
	}
	for(i=0;i<cnt;i++){
		if(b[i]){
			for(j =i+1;j<cnt;j++){
			if(c[i]==c[j])
				d[j]=1;
			}
		}		
	}
	printf("%d",c[0]);
	if(cnt>1){
		for(i=1;i<cnt;i++){
			if(d[i]==0){
				printf(" %d",c[i]);
			}					
		}
	}	
	return 0;	
}
